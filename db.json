{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/liuxw/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"themes/liuxw/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/liuxw/source/css/custom.styl","path":"css/custom.styl","modified":0,"renderable":1},{"_id":"themes/liuxw/source/dist/main.js","path":"dist/main.js","modified":0,"renderable":1},{"_id":"themes/liuxw/source/images/ayer-side.svg","path":"images/ayer-side.svg","modified":0,"renderable":1},{"_id":"themes/liuxw/source/images/ayer.png","path":"images/ayer.png","modified":0,"renderable":1},{"_id":"themes/liuxw/source/images/ayer.svg","path":"images/ayer.svg","modified":0,"renderable":1},{"_id":"themes/liuxw/source/images/bg_image.jpg","path":"images/bg_image.jpg","modified":0,"renderable":1},{"_id":"themes/liuxw/source/images/cover7.jpg","path":"images/cover7.jpg","modified":0,"renderable":1},{"_id":"themes/liuxw/source/images/forkme.png","path":"images/forkme.png","modified":0,"renderable":1},{"_id":"themes/liuxw/source/images/search.jpg","path":"images/search.jpg","modified":0,"renderable":1},{"_id":"themes/liuxw/source/js/busuanzi-2.3.pure.min.js","path":"js/busuanzi-2.3.pure.min.js","modified":0,"renderable":1},{"_id":"themes/liuxw/source/js/clickLove.js","path":"js/clickLove.js","modified":0,"renderable":1},{"_id":"themes/liuxw/source/js/lazyload.min.js","path":"js/lazyload.min.js","modified":0,"renderable":1},{"_id":"themes/liuxw/source/js/pace.min.js","path":"js/pace.min.js","modified":0,"renderable":1},{"_id":"themes/liuxw/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/liuxw/source/js/tocbot.min.js","path":"js/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/liuxw/source/dist/main.css","path":"dist/main.css","modified":0,"renderable":1},{"_id":"themes/liuxw/source/images/404.jpg","path":"images/404.jpg","modified":0,"renderable":1},{"_id":"themes/liuxw/source/images/alipay.jpg","path":"images/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/liuxw/source/images/cover2.jpg","path":"images/cover2.jpg","modified":0,"renderable":1},{"_id":"themes/liuxw/source/images/sponsor.jpg","path":"images/sponsor.jpg","modified":0,"renderable":1},{"_id":"themes/liuxw/source/js/jquery-2.0.3.min.js","path":"js/jquery-2.0.3.min.js","modified":0,"renderable":1},{"_id":"themes/liuxw/source/images/cover6.jpg","path":"images/cover6.jpg","modified":0,"renderable":1},{"_id":"themes/liuxw/source/images/wechat.jpg","path":"images/wechat.jpg","modified":0,"renderable":1},{"_id":"themes/liuxw/source/images/cover1.jpg","path":"images/cover1.jpg","modified":0,"renderable":1},{"_id":"themes/liuxw/source/images/cover3.jpg","path":"images/cover3.jpg","modified":0,"renderable":1},{"_id":"themes/liuxw/source/images/cover4.jpg","path":"images/cover4.jpg","modified":0,"renderable":1},{"_id":"themes/liuxw/source/images/cover5.jpg","path":"images/cover5.jpg","modified":0,"renderable":1},{"_id":"themes/liuxw/source/images/backimage.jpg","path":"images/backimage.jpg","modified":1,"renderable":1},{"_id":"themes/liuxw/source/images/thinker.png","path":"images/thinker.png","modified":1,"renderable":1}],"Cache":[{"_id":"themes/liuxw/.gitignore","hash":"b253f9829edcd1cf2a1fff279de3091e987dce6e","modified":1585886065024},{"_id":"themes/liuxw/.postcssrc","hash":"c171a60205840e3dcd3825d5bbb6b2d19d48ee76","modified":1585886065025},{"_id":"themes/liuxw/.stylintrc","hash":"eec4e824067be1a223745ca426aa367c8d482673","modified":1585886065025},{"_id":"themes/liuxw/.travis.yml","hash":"5acc6f203681ce88bc2dbb0f86e0b3dd32a243a0","modified":1585886065026},{"_id":"themes/liuxw/LICENSE","hash":"115a72f86fc1c3f3211398517cd7593a40703334","modified":1585886065026},{"_id":"themes/liuxw/README.md","hash":"f0d694bb0bcfbf482b26d5b9fe36fc8803518d18","modified":1585886065027},{"_id":"themes/liuxw/_config.yml","hash":"4e511405ef5f7b25208d50846cee25d57839f082","modified":1586254629091},{"_id":"themes/liuxw/logo.png","hash":"94ede98236a9506e41b39493f72ef2f457858e41","modified":1585886065044},{"_id":"themes/liuxw/package.json","hash":"e51d4488c65e268320b5348c243bae99c19285ed","modified":1585886065045},{"_id":"source/_posts/hello-world.md","hash":"3b06a39f57493cf10e06ef48a8000849fb2abc0d","modified":1586254020943},{"_id":"source/about/index.md","hash":"c274c7a527b695272e83bccefe6e1bdf1c4f5a5e","modified":1586249253879},{"_id":"source/categories/index.md","hash":"9c951abec383b304f5b67e0bbcc8f8d4d710ad05","modified":1586254438433},{"_id":"source/prototype/index.md","hash":"17fd738406684ec4acb2de25bba8018ad7e7c012","modified":1586315988045},{"_id":"source/tags/index.md","hash":"805fe83df36f3eb5e06d1e374908241eebde4ec6","modified":1586328078108},{"_id":"themes/liuxw/.github/FUNDING.yml","hash":"49e772bb69fec01a4a7bf9d440a28069f3df7970","modified":1585886065024},{"_id":"themes/liuxw/languages/de.yml","hash":"d45cea36c5c83d7d09afcd1c26fff4a4c513c25b","modified":1585886065028},{"_id":"themes/liuxw/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1585886065028},{"_id":"themes/liuxw/languages/fr.yml","hash":"8cb0fe4b6913b4d5b662cdd0108a923c90025f85","modified":1585886065029},{"_id":"themes/liuxw/languages/es.yml","hash":"e3b4937da4cd2d0393b8a0ba310e70fc605cc431","modified":1585886065029},{"_id":"themes/liuxw/languages/ja.yml","hash":"3e2fedca096678c0c234ebffa4637828979296fa","modified":1585886065029},{"_id":"themes/liuxw/languages/ko.yml","hash":"11330316e3c1262474a2b496e40dbc29f93fe01b","modified":1585886065029},{"_id":"themes/liuxw/languages/nl.yml","hash":"975dec487054bd6fcfa382d84e2165d56f2c4edf","modified":1585886065030},{"_id":"themes/liuxw/languages/pt.yml","hash":"ae2c61b30e638f74f1a42c9ce39ac08d063b30f5","modified":1585886065030},{"_id":"themes/liuxw/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1585886065030},{"_id":"themes/liuxw/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1585886065030},{"_id":"themes/liuxw/languages/zh-CN.yml","hash":"138cf2645e053d69ed89ba36573214d4d58f7486","modified":1585886065031},{"_id":"themes/liuxw/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1585886065031},{"_id":"themes/liuxw/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1585886065042},{"_id":"themes/liuxw/layout/categories.ejs","hash":"4039d782c0b1c935ad4898a0bf29afc58c95fbde","modified":1585886065043},{"_id":"themes/liuxw/layout/index.ejs","hash":"e75d0a62a96f74b9b65254388eb4120c6a7d7572","modified":1586252191755},{"_id":"themes/liuxw/layout/layout.ejs","hash":"63f080aefd0618e359a5fb53027a300c0210aaa5","modified":1586251243116},{"_id":"themes/liuxw/layout/page.ejs","hash":"75879224e47b3329d7accfc2403580a2412dce25","modified":1585886065043},{"_id":"themes/liuxw/layout/post.ejs","hash":"75879224e47b3329d7accfc2403580a2412dce25","modified":1585886065044},{"_id":"themes/liuxw/layout/tags.ejs","hash":"e7c9f93c6f7041a7d2aa95e85cc131b22aa426b7","modified":1585886065044},{"_id":"themes/liuxw/scripts/default_config.js","hash":"617c2614d8bd8ffda2f2f84ab54fb18866e39b33","modified":1585886065047},{"_id":"themes/liuxw/source/404.html","hash":"4fc0231bbc93e5de66dc02e8d38e24e1ed0d9df6","modified":1585886065062},{"_id":"themes/liuxw/source/favicon.ico","hash":"473ba682e828a7e34f24fae320e77b6bed4260c7","modified":1585886065064},{"_id":"themes/liuxw/source-src/main.js","hash":"e42992bf24b2864e33ea5fdfab122b5d41851066","modified":1585886065061},{"_id":"themes/liuxw/layout/_partial/after-footer.ejs","hash":"20e5e79cf89549afc03888c52eeda48e4bad258e","modified":1585886065032},{"_id":"themes/liuxw/layout/_partial/archive-post.ejs","hash":"6b3e77cdbf8271c2a22b839608cccaa651f84e93","modified":1585886065032},{"_id":"themes/liuxw/layout/_partial/archive.ejs","hash":"a3dc9b76c9935f778f63b6cfc177f87eb54bd8ef","modified":1586250041250},{"_id":"themes/liuxw/layout/_partial/article.ejs","hash":"15fc651f4848a4e871b770aed17a8b02d5e2d3bd","modified":1586254866207},{"_id":"themes/liuxw/layout/_partial/ayer.ejs","hash":"b743debe5c9129fbf806f643c6eff14e25fe5098","modified":1586244869511},{"_id":"themes/liuxw/layout/_partial/baidu-analytics.ejs","hash":"155327c23607f69989b58845f24d842a54e504b8","modified":1585886065033},{"_id":"themes/liuxw/layout/_partial/footer.ejs","hash":"e89ebf1aa2542a722927fb2e8fd674ff0132aa44","modified":1586246974382},{"_id":"themes/liuxw/layout/_partial/google-analytics.ejs","hash":"3a23d6ae48305c9f1b5c400da780288c2425254b","modified":1585886065034},{"_id":"themes/liuxw/layout/_partial/head.ejs","hash":"3233311c721bed6fbb8447c104da3d0a10187b4f","modified":1585886065034},{"_id":"themes/liuxw/layout/_partial/katex.ejs","hash":"02cb9da065cd315a06d62d13872dc687c62e9a1f","modified":1585886065035},{"_id":"themes/liuxw/layout/_partial/mathjax.ejs","hash":"bcc264b6d6b58b3b692139c4d8b1381da4820da8","modified":1585886065035},{"_id":"themes/liuxw/layout/_partial/modal.ejs","hash":"b9caece8b5fb47e250c67f6f80f101f08d04eba9","modified":1585886065035},{"_id":"themes/liuxw/layout/_partial/music.ejs","hash":"4a67b36cadf2661a5579a454b7d6e0be34e7a0d4","modified":1585886065036},{"_id":"themes/liuxw/layout/_partial/sidebar.ejs","hash":"b7efb7f2b300de23d12ef310d710d809d979f4fd","modified":1585886065041},{"_id":"themes/liuxw/layout/_partial/totop.ejs","hash":"b2fc5726168f012bc61845f33a46404ff4065947","modified":1585886065042},{"_id":"themes/liuxw/layout/_partial/viewer.ejs","hash":"219f0a0ec2eb35e8ba27a849639a5f634273fb6f","modified":1585886065042},{"_id":"themes/liuxw/scripts/filters/index.js","hash":"e0c3b821ecd1cb614569282fb4f6e6f555545f8b","modified":1585886065048},{"_id":"themes/liuxw/scripts/filters/meta_generator.js","hash":"86d0b5a475f59324b277824b2de15775505080c6","modified":1585886065048},{"_id":"themes/liuxw/scripts/helpers/ayer-plus-vendors.js","hash":"611f3bcd8220312f92c11fa6a5dad02f011068d2","modified":1585886065049},{"_id":"themes/liuxw/scripts/helpers/wordcount.js","hash":"2014b5c5053ad737887b61014a045cc1b08799cd","modified":1585886065049},{"_id":"themes/liuxw/scripts/lib/core.js","hash":"00509e97554914e5b0a20e0843dc90bcf53461aa","modified":1585886065049},{"_id":"themes/liuxw/source/css/custom.styl","hash":"d3dc76192935e696c2c153b014b5c28fbb4c88a7","modified":1585886065062},{"_id":"themes/liuxw/source/dist/main.js","hash":"7fbcb831236ee97b39dd06919e56bacc01099f3b","modified":1585903809010},{"_id":"themes/liuxw/source/images/ayer-side.svg","hash":"bf0fc3e052e60c2a10d9dffa7b746358c4c33d6a","modified":1585886065067},{"_id":"themes/liuxw/source/images/ayer.png","hash":"94ede98236a9506e41b39493f72ef2f457858e41","modified":1585886065067},{"_id":"themes/liuxw/source/images/ayer.svg","hash":"1c87519aec678f95895c8480ddf44b371479f2f5","modified":1585886065068},{"_id":"themes/liuxw/source/images/bg_image.jpg","hash":"013f8a5d3cbed30a7bf8fa12d2fa6daa172bd9a1","modified":1585901627405},{"_id":"themes/liuxw/source/images/cover7.jpg","hash":"27e67d0ac848efa0f0195352a4b14a2f108565bf","modified":1585886065084},{"_id":"themes/liuxw/source/images/forkme.png","hash":"b43e6e18b84edc40636204aa0eb9f266ef54a4e7","modified":1585886065085},{"_id":"themes/liuxw/source/images/search.jpg","hash":"efdc9f005aed1470ce2d5f796224c6f1e63afeed","modified":1585901635728},{"_id":"themes/liuxw/source/js/busuanzi-2.3.pure.min.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1585886065087},{"_id":"themes/liuxw/source/js/clickLove.js","hash":"a35dfb7ff19796c005ee30b55fd95e39d6d59a89","modified":1585886065087},{"_id":"themes/liuxw/source/js/lazyload.min.js","hash":"d9bc50752cd7e331dbd0a833386838397c9a079f","modified":1585886065088},{"_id":"themes/liuxw/source/js/pace.min.js","hash":"64759f14e0f92d62df57eb752f1745a16aba93ce","modified":1585886065088},{"_id":"themes/liuxw/source/js/search.js","hash":"6d5c093d12e922ad204dab1723b786c35847bf1b","modified":1585886065089},{"_id":"themes/liuxw/source/js/tocbot.min.js","hash":"bae97e8a24a05a99335f8e725641c8ca9c50502a","modified":1585886065089},{"_id":"themes/liuxw/source-src/css/_extend.styl","hash":"974b9483061fe83f585cc496791ba07e87c78689","modified":1585886065050},{"_id":"themes/liuxw/source-src/css/_mixins.styl","hash":"e4804d78ded3714495f8ac9cebdbd2871ed97549","modified":1585886065050},{"_id":"themes/liuxw/source-src/css/_normalize.styl","hash":"df9ca719f651c45a88ab4d6afa6d29edf51aeba9","modified":1585886065050},{"_id":"themes/liuxw/source-src/css/_variables.styl","hash":"2fdb4425b6213fed28921f53179e825aee0500cf","modified":1585886065059},{"_id":"themes/liuxw/source-src/css/style.styl","hash":"246cf149620cd6d07350aae78e5d53703abb3a60","modified":1585886065060},{"_id":"themes/liuxw/source-src/js/ayer.js","hash":"e6846036ef2b44d6bef4f5bb60f3bf6b732953eb","modified":1585886065060},{"_id":"themes/liuxw/source-src/js/share.js","hash":"e8fd85622f774be877438421c182cd37eb15196e","modified":1585886065061},{"_id":"themes/liuxw/screenshots/hexo-theme-ayer.png","hash":"265e0aaad0962caf7a7cae5ce98f1390c6716592","modified":1585886065047},{"_id":"themes/liuxw/source/dist/main.css","hash":"08ec92d9c7cf4f50ef48988a04f7f06b6f784af4","modified":1585886065063},{"_id":"themes/liuxw/source/images/404.jpg","hash":"f2c69a093e3c56a8c033fc60967cab04469bc5ec","modified":1585886065065},{"_id":"themes/liuxw/source/images/alipay.jpg","hash":"a3c07721266569be2cafd4c90fa66a54d474c777","modified":1585901614056},{"_id":"themes/liuxw/source/images/cover2.jpg","hash":"f61dd08c95327468c5f6bc5175eff68d00f05b46","modified":1585886065072},{"_id":"themes/liuxw/source/images/sponsor.jpg","hash":"d19df6ddd7ca4ce5fe23db4ec2865265efa7ea54","modified":1585886065086},{"_id":"themes/liuxw/source/js/jquery-2.0.3.min.js","hash":"e68550a39c95a6400287b3abd77f40c44f322e50","modified":1585886065088},{"_id":"themes/liuxw/source-src/css/_remixicon.styl","hash":"01e513e1fc0780e5c685eb3fb94fd6fec3a8594f","modified":1585886065059},{"_id":"themes/liuxw/layout/_partial/post/albums.ejs","hash":"f4cfbabca9f59a9e5aa457a6f2a9cf6f56cd22b3","modified":1585886065036},{"_id":"themes/liuxw/layout/_partial/post/busuanzi.ejs","hash":"4e30e1b940eb06264a5ab5e39f5a9ae286ab6d93","modified":1585886065037},{"_id":"themes/liuxw/layout/_partial/post/category.ejs","hash":"89cb32e8d98bad81d3ef33377212e9b253699d3d","modified":1585886065037},{"_id":"themes/liuxw/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1585886065037},{"_id":"themes/liuxw/layout/_partial/post/gallery.ejs","hash":"6f78a49edc91f230b0a838c77630e9671d8d6089","modified":1585886065037},{"_id":"themes/liuxw/layout/_partial/post/gitalk.ejs","hash":"38bb3f504a878d163a430ce6253dae3142a8fae5","modified":1585886065038},{"_id":"themes/liuxw/layout/_partial/post/justifiedGallery.ejs","hash":"a313df6a014a0f2ba6b869dabc56bacb8ff6324d","modified":1585886065038},{"_id":"themes/liuxw/layout/_partial/post/nav.ejs","hash":"a73010cbbc463089a1376889850fb0890143c988","modified":1585886065039},{"_id":"themes/liuxw/layout/_partial/post/search.ejs","hash":"47c818c236b063d6ce0c41e0824f9f10a3521414","modified":1585886065039},{"_id":"themes/liuxw/layout/_partial/post/share.ejs","hash":"9a978d55358878c97186ed010e536e1b314adb35","modified":1585886065039},{"_id":"themes/liuxw/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1585886065040},{"_id":"themes/liuxw/layout/_partial/post/title.ejs","hash":"e55c57b8cb8c8acf0ed998ea31c2fbc1d6256027","modified":1585886065040},{"_id":"themes/liuxw/layout/_partial/post/tocbot.ejs","hash":"17ac504f2a6d561765046a0ba19dcce504104517","modified":1585886065040},{"_id":"themes/liuxw/layout/_partial/post/topping.ejs","hash":"4031d3c8815a61ca25ffedd17c3271693c0ee4b3","modified":1585886065040},{"_id":"themes/liuxw/layout/_partial/post/valine.ejs","hash":"070662f5e0ccfcdecbae3607c224b2ccf7cdefe9","modified":1585886065041},{"_id":"themes/liuxw/layout/_partial/post/word.ejs","hash":"d7ac850312f2d953411f8574e751d6c0439447e1","modified":1585909209165},{"_id":"themes/liuxw/layout/_third-party/comments/index.pug","hash":"7a4c1c16bb3b8ca5408ddfebaafbad0e9a70bda3","modified":1585901660982},{"_id":"themes/liuxw/source/images/cover6.jpg","hash":"46942a4d90cac9ef8f33ae3e83ccf9aa7190bed6","modified":1585886065084},{"_id":"themes/liuxw/source/images/wechat.jpg","hash":"1e2998ffc39c15440f8ebb3c110b1bdb00b598f3","modified":1585901620172},{"_id":"themes/liuxw/source-src/css/_partial/albums.styl","hash":"5802253789028a4d9dac474168fc7132045e72ff","modified":1585886065051},{"_id":"themes/liuxw/source-src/css/_partial/archive.styl","hash":"c20ad235d8aab4bc77a2372a053d86fe0069f7fe","modified":1585886065051},{"_id":"themes/liuxw/source-src/css/_partial/apple.styl","hash":"333f9e59dc6625c4dee126a1c1a9c25ce9292655","modified":1585886065051},{"_id":"themes/liuxw/source-src/css/_partial/article.styl","hash":"61c9b30c01c6ecd3e90ae3f568df690e70754c7f","modified":1585886065052},{"_id":"themes/liuxw/source-src/css/_partial/articles.styl","hash":"ddbe833939180afdc832659c5cdad08f77ef4f46","modified":1585886065052},{"_id":"themes/liuxw/source-src/css/_partial/ayer.styl","hash":"cfcae3839170f2d04ea504a3cd3d62a9cde6647d","modified":1585886065052},{"_id":"themes/liuxw/source-src/css/_partial/categories.styl","hash":"b86d2385a095c60ef012641874e222febf017cd3","modified":1585886065053},{"_id":"themes/liuxw/source-src/css/_partial/float.styl","hash":"b1abfdfd05e74745484f7e6d043ef2842b3f6b41","modified":1585886065053},{"_id":"themes/liuxw/source-src/css/_partial/footer.styl","hash":"a5d81197c6b69e4e31a3f13021deedf7fe72bc76","modified":1585886065053},{"_id":"themes/liuxw/source-src/css/_partial/gallery.styl","hash":"f5eae1b0030cfd97f1646844c9d3f692dbb38946","modified":1585886065054},{"_id":"themes/liuxw/source-src/css/_partial/gitalk.styl","hash":"0678e8b330daea56fa30d14e97de73289a7d6f22","modified":1585886065054},{"_id":"themes/liuxw/source-src/css/_partial/highlight.styl","hash":"1210f704aae34ef653e3a458cccb700b05353ea1","modified":1585886065054},{"_id":"themes/liuxw/source-src/css/_partial/justifiedGallery.styl","hash":"9828c78fb59c3ea3de7cce2569313d12c4b1a6ff","modified":1585886065055},{"_id":"themes/liuxw/source-src/css/_partial/layout.styl","hash":"11cb01af7fc318f371e4df414a7f3301b80e8cb6","modified":1585886065055},{"_id":"themes/liuxw/source-src/css/_partial/lists.styl","hash":"dc45f8b1a5942d4d979fb0859bc47a86f73fe0a9","modified":1585886065055},{"_id":"themes/liuxw/source-src/css/_partial/mobile.styl","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1585886065055},{"_id":"themes/liuxw/source-src/css/_partial/navbar.styl","hash":"30d7e1de22185c4b4da33eef66b5eb96f9e5ae98","modified":1585886065056},{"_id":"themes/liuxw/source-src/css/_partial/reward.styl","hash":"a032e43e5842f752fd612ddbbd7943ecece7c35b","modified":1585886065056},{"_id":"themes/liuxw/source-src/css/_partial/pace.styl","hash":"bbda18c692fc66ae99e45347ff52c14e44a08e3b","modified":1585886065056},{"_id":"themes/liuxw/source-src/css/_partial/search.styl","hash":"3f2c7bd1371f6f25aec7c581dbae7b52f95ec4c6","modified":1585886065057},{"_id":"themes/liuxw/source-src/css/_partial/share.styl","hash":"4a6e6ac9156553dd5cee1eeee8fdc6f1f8a5d117","modified":1585886065057},{"_id":"themes/liuxw/source-src/css/_partial/sidebar.styl","hash":"cdc7bea47a768b18991decde0d38c554399621ee","modified":1585886065057},{"_id":"themes/liuxw/source-src/css/_partial/tag.styl","hash":"6072aa6bd16e0a1e75f0258d7b20587cab56fff8","modified":1585886065058},{"_id":"themes/liuxw/source-src/css/_partial/totop.styl","hash":"b6010788be1d99a345abcf0cf9cdf0a564b90d3c","modified":1585886065058},{"_id":"themes/liuxw/source-src/css/_partial/tocbot.styl","hash":"5ba644d46e3eae1f42d238a0999b4b4ddbf9016f","modified":1585886065058},{"_id":"themes/liuxw/source/images/cover1.jpg","hash":"e019fbed6158ae3e4ec3d255b41bddc1afcbfa90","modified":1585886065070},{"_id":"themes/liuxw/source/images/cover3.jpg","hash":"7b4e7c9ce19ce5d5c1588b2567e88ecbb04370af","modified":1585886065074},{"_id":"themes/liuxw/source/images/cover4.jpg","hash":"77040e609d2f1c60e00a8e47cb95b25bf7ff5b9c","modified":1585886065077},{"_id":"themes/liuxw/source/images/cover5.jpg","hash":"1a2d6182d94b015a45fe4bf8e8a239dfcc0ef776","modified":1585886065083},{"_id":"public/atom.xml","hash":"18f3b71622ebaf0b4c3fccfdb7a13bd1a2681730","modified":1586254843018},{"_id":"public/search.xml","hash":"996184b7a957892ef69b0f26689bb24ec91ffbf2","modified":1586315995767},{"_id":"public/about/index.html","hash":"9de15058df9bd340ac1ce12700c8e1dcce299cc9","modified":1586252197174},{"_id":"public/tags/index.html","hash":"009a8f1d151c883a8884dc34e49e64df51f26883","modified":1586254142982},{"_id":"public/prototype/index.html","hash":"552c05ec6dc43ae7b721f9a7d4605b4145e99f7e","modified":1586315995767},{"_id":"public/categories/index.html","hash":"57811ffdb7bbd8de883cd1cf62f5fc8a884d2573","modified":1586254142982},{"_id":"public/archives/index.html","hash":"8a39ae0ee62b21b5e449bf73031d5814327e2abe","modified":1586254843018},{"_id":"public/archives/2020/index.html","hash":"822f30a04f525c447f77ef426cd182fcdedfc840","modified":1586254843018},{"_id":"public/2020/03/26/hello-world/index.html","hash":"c38d63c8db5513ada481bb3f5df3fbe1fb5d99ff","modified":1586252506324},{"_id":"public/archives/2020/03/index.html","hash":"21683a9975eab38558a72c16b751ef50da4a36d4","modified":1586252197174},{"_id":"public/index.html","hash":"64cea8481ad83f727885bbb1cdb6607fbd7bf1e6","modified":1586254871387},{"_id":"public/favicon.ico","hash":"473ba682e828a7e34f24fae320e77b6bed4260c7","modified":1586246623645},{"_id":"public/images/ayer.svg","hash":"1c87519aec678f95895c8480ddf44b371479f2f5","modified":1586246623645},{"_id":"public/images/ayer.png","hash":"94ede98236a9506e41b39493f72ef2f457858e41","modified":1586246623645},{"_id":"public/images/bg_image.jpg","hash":"013f8a5d3cbed30a7bf8fa12d2fa6daa172bd9a1","modified":1586246623645},{"_id":"public/images/ayer-side.svg","hash":"bf0fc3e052e60c2a10d9dffa7b746358c4c33d6a","modified":1586246623645},{"_id":"public/images/cover7.jpg","hash":"27e67d0ac848efa0f0195352a4b14a2f108565bf","modified":1586246623645},{"_id":"public/images/forkme.png","hash":"b43e6e18b84edc40636204aa0eb9f266ef54a4e7","modified":1586246623645},{"_id":"public/images/search.jpg","hash":"efdc9f005aed1470ce2d5f796224c6f1e63afeed","modified":1586246623645},{"_id":"public/assets/css/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1586246623645},{"_id":"public/assets/js/Meting.min.js","hash":"a0585220b918d78649a7893279e1ec4fb5abe835","modified":1586246623645},{"_id":"public/images/404.jpg","hash":"f2c69a093e3c56a8c033fc60967cab04469bc5ec","modified":1586246623645},{"_id":"public/images/alipay.jpg","hash":"a3c07721266569be2cafd4c90fa66a54d474c777","modified":1586246623645},{"_id":"public/images/cover2.jpg","hash":"f61dd08c95327468c5f6bc5175eff68d00f05b46","modified":1586246623645},{"_id":"public/images/sponsor.jpg","hash":"d19df6ddd7ca4ce5fe23db4ec2865265efa7ea54","modified":1586246623645},{"_id":"public/assets/js/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1586246623645},{"_id":"public/dist/main.js","hash":"630adde4e1c4d938f118128166958ebb75274d93","modified":1586246623645},{"_id":"public/css/custom.css","hash":"78b13bf5b98278ff65cdb0a731f2a1c98b2324a5","modified":1586246623645},{"_id":"public/js/lazyload.min.js","hash":"b801b3946fb9b72e03512c0663458e140e1fa77b","modified":1586246623645},{"_id":"public/js/search.js","hash":"118be0e0918532ac1225f62e1a0a6f0673e0b173","modified":1586246623645},{"_id":"public/js/clickLove.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1586246623645},{"_id":"public/js/busuanzi-2.3.pure.min.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1586246623645},{"_id":"public/js/pace.min.js","hash":"d32ab818e0f97d3b0c80f5631fc23d8a0cb52795","modified":1586246623645},{"_id":"public/js/tocbot.min.js","hash":"bae97e8a24a05a99335f8e725641c8ca9c50502a","modified":1586246623645},{"_id":"public/404.html","hash":"b04dbbe247664e33dab38e42c1b6cd9ec2887fe5","modified":1586246623645},{"_id":"public/dist/main.css","hash":"08ec92d9c7cf4f50ef48988a04f7f06b6f784af4","modified":1586246623645},{"_id":"public/js/jquery-2.0.3.min.js","hash":"800edb7787c30f4982bf38f2cb8f4f6fb61340e9","modified":1586246623645},{"_id":"public/images/cover6.jpg","hash":"46942a4d90cac9ef8f33ae3e83ccf9aa7190bed6","modified":1586246623645},{"_id":"public/images/wechat.jpg","hash":"1e2998ffc39c15440f8ebb3c110b1bdb00b598f3","modified":1586246623645},{"_id":"public/images/cover3.jpg","hash":"7b4e7c9ce19ce5d5c1588b2567e88ecbb04370af","modified":1586246623645},{"_id":"public/images/cover1.jpg","hash":"e019fbed6158ae3e4ec3d255b41bddc1afcbfa90","modified":1586246623645},{"_id":"public/images/cover4.jpg","hash":"77040e609d2f1c60e00a8e47cb95b25bf7ff5b9c","modified":1586246623645},{"_id":"public/images/cover5.jpg","hash":"1a2d6182d94b015a45fe4bf8e8a239dfcc0ef776","modified":1586246623645},{"_id":"public/tags/测试/index.html","hash":"61028de1901e375d160d047dda7af110182c37f1","modified":1586248915453},{"_id":"source/_posts/sysdefine.md","hash":"1e14783a347977e8c29020ecada307218ef00bb5","modified":1586253909594},{"_id":"public/2020/04/07/sysdefine/index.html","hash":"547afbd1bb1cff32a8586003cdfb2893431c8c3e","modified":1586254871387},{"_id":"public/archives/2020/04/index.html","hash":"7c02a1374d0006752ad4ecc82fb13827bbd73d18","modified":1586254843018},{"_id":"public/tags/操作系统/index.html","hash":"8302d244f01d4bc8cb0b1eaef80272fb5037855c","modified":1586252506324},{"_id":"public/categories/操作系统/index.html","hash":"982d9cc43ab16a3f190a840ffdead2a7fb885358","modified":1586254843018},{"_id":"source/_posts/process.md","hash":"a5de980b589ecc451ffd2cd1b76c9eff816ae254","modified":1586254244698},{"_id":"public/categories/工具/index.html","hash":"3866a1a7dd314d35c9e923ff381f387f104a0e74","modified":1586254142982},{"_id":"public/tags/hexo/index.html","hash":"986227b552e4c227149f9cbbfe8f182184f71994","modified":1586254142982},{"_id":"public/tags/进程/index.html","hash":"3cb5bf1eb482fa7072c7865468a96bc379ae3b97","modified":1586254843018},{"_id":"public/2020/04/07/process/index.html","hash":"6a3bb6a814fad989ae012a82dcf9efdc77d88a4f","modified":1586254871387},{"_id":"public/2020/04/07/hello-world/index.html","hash":"0902e036cebbbb14706bb273f64dd6fb16611717","modified":1586254871387},{"_id":"source/about/index.html","hash":"3d41430718e04f9c34bf020fee4154e244815fe9","modified":1586317350193}],"Category":[{"name":"操作系统","_id":"ck8pprmfx0001skvdfqf89es4"},{"name":"工具","_id":"ck8pqnf9o0000ksvde7vhaxg2"}],"Data":[],"Page":[{"title":"标签","type":"tags","layout":"tags","date":"2020-04-07T08:38:01.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ntype: \"tags\"\nlayout: \"tags\"\ndate: 2020-04-07 16:38:01\n---","updated":"2020-04-08T06:41:18.108Z","path":"tags/index.html","_id":"ck8pnlfyf0001n8vdcvpb5183","comments":1,"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\thinkerlxw\\assets\\css\\APlayer.min.css\"><script src=\"\\thinkerlxw\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","type":"categories","layout":"categories","date":"2020-04-07T08:37:24.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ntype: \"categories\"\nlayout: \"categories\"\ndate: 2020-04-07 16:37:24\n---\n","updated":"2020-04-07T10:13:58.433Z","path":"categories/index.html","_id":"ck8pnlfyf0002n8vd9tsuats8","comments":1,"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\thinkerlxw\\assets\\css\\APlayer.min.css\"><script src=\"\\thinkerlxw\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hexo使用指南","date":"2020-04-07T09:38:07.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## 快速开始\n\n### 创建一个新页面\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\n了解更多: [Writing](https://hexo.io/docs/writing.html)\n\n### 启动服务\n\n``` bash\n$ hexo server\n```\n\n了解更多: [Server](https://hexo.io/docs/server.html)\n\n### 生成静态文件\n\n``` bash\n$ hexo generate\n```\n\n了解更多: [Generating](https://hexo.io/docs/generating.html)\n\n### 上传\n\n``` bash\n$ hexo deploy\n```\n\n了解更多: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hexo使用指南\ndate: 2020-04-07 17:38:07\ntags: \"hexo\"\ncategories: \"工具\"\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## 快速开始\n\n### 创建一个新页面\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\n了解更多: [Writing](https://hexo.io/docs/writing.html)\n\n### 启动服务\n\n``` bash\n$ hexo server\n```\n\n了解更多: [Server](https://hexo.io/docs/server.html)\n\n### 生成静态文件\n\n``` bash\n$ hexo generate\n```\n\n了解更多: [Generating](https://hexo.io/docs/generating.html)\n\n### 上传\n\n``` bash\n$ hexo deploy\n```\n\n了解更多: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"updated":"2020-04-07T10:07:00.943Z","_id":"ck8pma9310000l4vd3d3q4igk","comments":1,"layout":"post","photos":[],"link":"","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\thinkerlxw\\assets\\css\\APlayer.min.css\"><script src=\"\\thinkerlxw\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"快速开始\"><a href=\"#快速开始\" class=\"headerlink\" title=\"快速开始\"></a>快速开始</h2><h3 id=\"创建一个新页面\"><a href=\"#创建一个新页面\" class=\"headerlink\" title=\"创建一个新页面\"></a>创建一个新页面</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>了解更多: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>了解更多: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>了解更多: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"上传\"><a href=\"#上传\" class=\"headerlink\" title=\"上传\"></a>上传</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>了解更多: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"快速开始\"><a href=\"#快速开始\" class=\"headerlink\" title=\"快速开始\"></a>快速开始</h2><h3 id=\"创建一个新页面\"><a href=\"#创建一个新页面\" class=\"headerlink\" title=\"创建一个新页面\"></a>创建一个新页面</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>了解更多: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>了解更多: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>了解更多: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"上传\"><a href=\"#上传\" class=\"headerlink\" title=\"上传\"></a>上传</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>了解更多: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"操作系统概念","date":"2020-04-07T09:38:07.000Z","_content":"\n### 一、进程\n1、进程的本质：正在执行的一个程序。\n2、进程的地址空间：从某个最小值的存储位置（通常是零）到某个最大值存储位置的列表。在这个地址空间中，进程可以进行读写。该地址空间中存放有可执行程序、程序的数据以及程序的堆栈。与每个进程相关的还有资源集，通常包含寄存器（含有程序计数器和堆栈指针）、打开文件的清单、突出的报警、有关进程清单，以及运行该程序所需要的所有其他信息。\n3、进程基本上是容纳运行一个程序需要所有信息的容器。\n在许多操作系统中，与一个进程有关的所有信息，处理该进程自身地址空间的内容以外，均存放在操作系统中的进程表中，进程表是数组（或链表）结构，当前存在的每个进程都要占用其中的一项。一个（挂起的）进程包括：进程的地址空间（磁芯映像），以及对应的进程表项，其中包括寄存器以及稍后重新启动该进程所需的其他信息。\n>进程间通信：合作完成某些作业的相关进程进行彼此通信以便同步它们的行为。\n>进程系统调用：进程创建、进程终止、申请更多内存（或释放不再需要内存）、等待一个子进程结束、用另一个程序覆盖该程序等。\n\n系统管理器授权每个进程使用一个给定的UID标识符，每个被启动的进程都有一个启动该进程的用户UID。子进程拥有与父进程一样的UID，用户可以是某个组的成员，每个组也有一个GID标识。\n\n### 二、地址空间\n通常每个进程有一些可以使用的地址集合，典型值从0开始直到某个最大值。在最简单情况下，一个进程可拥有的最大地址空间小于主存。\n>在23位地址的计算机中，有2^32字节的地址空间；64位就有2^64字节的地址空间。\n\n虚拟内存：操作系统可以把部分地址空间装入主存，部分留在磁盘上，并且在需要时穿梭交换它们。该地址空间与机器的物理内存解耦，可能大于也可能小于该物理空间。\n\n### 三、文件\n>操作系统的一项主要功能就是隐藏磁盘和其他I/O设备的细节特性，并提供给程序员一个良好、清晰的独立于设备的抽象文件模型。\n\n进程和文件层次都可以组成树状结构，它们的不同之处在于：\n一般进程的树状结构层次不深（低于三层），而文件树状结构的层次常多于4层以上，进程树层次结构是暂时的，时间短，而目录层次是永久性的。进程和文件在所有权及保护方面也有区别：只有父进程能控制和访问子进程，而在文件和目录中存在一种机制，使文件所有者之外的其他用户也可以进行访问。\n目录结构中的每个文件都可以通过根目录（目录的顶部）来确定。在读写文件之前，首先要打开文件，检查其访问权限。若权限许可，系统将返回一个文件描述符（小整数），供后续操作使用。若禁止访问就会返回一个错误码。\n### 四、保护\n管理系统的安全性完全依赖操作系统，文件的访问权限也是需要进行保护的。\n在UNIX系统中，每个文件赋予一个9位的二进制保护码，该保护码有三个3位字段---rwx位，其中r代表可读，w代表可写，x代表可执行。三个字段分别用于所有者，所有者同组中的其他成员以及其他成员。\n例如：rwxrw-r--代表了所有者可以读写执行文件，同组具有读写权限，而其他成员只具备读的权限。\n### 五、shell\n操作系统是进行系统调用的代码，shell是UNIX中的命令解释器，它本身不是操作系统的组成部分，它是终端用户与操作系统之间的界面。","source":"_posts/sysdefine.md","raw":"---\ntitle: 操作系统概念\ndate: 2020-04-07 17:38:07\ntags: \"操作系统\"\ncategories: \"操作系统\"\n---\n\n### 一、进程\n1、进程的本质：正在执行的一个程序。\n2、进程的地址空间：从某个最小值的存储位置（通常是零）到某个最大值存储位置的列表。在这个地址空间中，进程可以进行读写。该地址空间中存放有可执行程序、程序的数据以及程序的堆栈。与每个进程相关的还有资源集，通常包含寄存器（含有程序计数器和堆栈指针）、打开文件的清单、突出的报警、有关进程清单，以及运行该程序所需要的所有其他信息。\n3、进程基本上是容纳运行一个程序需要所有信息的容器。\n在许多操作系统中，与一个进程有关的所有信息，处理该进程自身地址空间的内容以外，均存放在操作系统中的进程表中，进程表是数组（或链表）结构，当前存在的每个进程都要占用其中的一项。一个（挂起的）进程包括：进程的地址空间（磁芯映像），以及对应的进程表项，其中包括寄存器以及稍后重新启动该进程所需的其他信息。\n>进程间通信：合作完成某些作业的相关进程进行彼此通信以便同步它们的行为。\n>进程系统调用：进程创建、进程终止、申请更多内存（或释放不再需要内存）、等待一个子进程结束、用另一个程序覆盖该程序等。\n\n系统管理器授权每个进程使用一个给定的UID标识符，每个被启动的进程都有一个启动该进程的用户UID。子进程拥有与父进程一样的UID，用户可以是某个组的成员，每个组也有一个GID标识。\n\n### 二、地址空间\n通常每个进程有一些可以使用的地址集合，典型值从0开始直到某个最大值。在最简单情况下，一个进程可拥有的最大地址空间小于主存。\n>在23位地址的计算机中，有2^32字节的地址空间；64位就有2^64字节的地址空间。\n\n虚拟内存：操作系统可以把部分地址空间装入主存，部分留在磁盘上，并且在需要时穿梭交换它们。该地址空间与机器的物理内存解耦，可能大于也可能小于该物理空间。\n\n### 三、文件\n>操作系统的一项主要功能就是隐藏磁盘和其他I/O设备的细节特性，并提供给程序员一个良好、清晰的独立于设备的抽象文件模型。\n\n进程和文件层次都可以组成树状结构，它们的不同之处在于：\n一般进程的树状结构层次不深（低于三层），而文件树状结构的层次常多于4层以上，进程树层次结构是暂时的，时间短，而目录层次是永久性的。进程和文件在所有权及保护方面也有区别：只有父进程能控制和访问子进程，而在文件和目录中存在一种机制，使文件所有者之外的其他用户也可以进行访问。\n目录结构中的每个文件都可以通过根目录（目录的顶部）来确定。在读写文件之前，首先要打开文件，检查其访问权限。若权限许可，系统将返回一个文件描述符（小整数），供后续操作使用。若禁止访问就会返回一个错误码。\n### 四、保护\n管理系统的安全性完全依赖操作系统，文件的访问权限也是需要进行保护的。\n在UNIX系统中，每个文件赋予一个9位的二进制保护码，该保护码有三个3位字段---rwx位，其中r代表可读，w代表可写，x代表可执行。三个字段分别用于所有者，所有者同组中的其他成员以及其他成员。\n例如：rwxrw-r--代表了所有者可以读写执行文件，同组具有读写权限，而其他成员只具备读的权限。\n### 五、shell\n操作系统是进行系统调用的代码，shell是UNIX中的命令解释器，它本身不是操作系统的组成部分，它是终端用户与操作系统之间的界面。","slug":"sysdefine","published":1,"updated":"2020-04-07T10:05:09.594Z","_id":"ck8pprmfr0000skvdcc5j2pgx","comments":1,"layout":"post","photos":[],"link":"","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\thinkerlxw\\assets\\css\\APlayer.min.css\"><script src=\"\\thinkerlxw\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h3 id=\"一、进程\"><a href=\"#一、进程\" class=\"headerlink\" title=\"一、进程\"></a>一、进程</h3><p>1、进程的本质：正在执行的一个程序。<br>2、进程的地址空间：从某个最小值的存储位置（通常是零）到某个最大值存储位置的列表。在这个地址空间中，进程可以进行读写。该地址空间中存放有可执行程序、程序的数据以及程序的堆栈。与每个进程相关的还有资源集，通常包含寄存器（含有程序计数器和堆栈指针）、打开文件的清单、突出的报警、有关进程清单，以及运行该程序所需要的所有其他信息。<br>3、进程基本上是容纳运行一个程序需要所有信息的容器。<br>在许多操作系统中，与一个进程有关的所有信息，处理该进程自身地址空间的内容以外，均存放在操作系统中的进程表中，进程表是数组（或链表）结构，当前存在的每个进程都要占用其中的一项。一个（挂起的）进程包括：进程的地址空间（磁芯映像），以及对应的进程表项，其中包括寄存器以及稍后重新启动该进程所需的其他信息。</p>\n<blockquote>\n<p>进程间通信：合作完成某些作业的相关进程进行彼此通信以便同步它们的行为。<br>进程系统调用：进程创建、进程终止、申请更多内存（或释放不再需要内存）、等待一个子进程结束、用另一个程序覆盖该程序等。</p>\n</blockquote>\n<p>系统管理器授权每个进程使用一个给定的UID标识符，每个被启动的进程都有一个启动该进程的用户UID。子进程拥有与父进程一样的UID，用户可以是某个组的成员，每个组也有一个GID标识。</p>\n<h3 id=\"二、地址空间\"><a href=\"#二、地址空间\" class=\"headerlink\" title=\"二、地址空间\"></a>二、地址空间</h3><p>通常每个进程有一些可以使用的地址集合，典型值从0开始直到某个最大值。在最简单情况下，一个进程可拥有的最大地址空间小于主存。</p>\n<blockquote>\n<p>在23位地址的计算机中，有2^32字节的地址空间；64位就有2^64字节的地址空间。</p>\n</blockquote>\n<p>虚拟内存：操作系统可以把部分地址空间装入主存，部分留在磁盘上，并且在需要时穿梭交换它们。该地址空间与机器的物理内存解耦，可能大于也可能小于该物理空间。</p>\n<h3 id=\"三、文件\"><a href=\"#三、文件\" class=\"headerlink\" title=\"三、文件\"></a>三、文件</h3><blockquote>\n<p>操作系统的一项主要功能就是隐藏磁盘和其他I/O设备的细节特性，并提供给程序员一个良好、清晰的独立于设备的抽象文件模型。</p>\n</blockquote>\n<p>进程和文件层次都可以组成树状结构，它们的不同之处在于：<br>一般进程的树状结构层次不深（低于三层），而文件树状结构的层次常多于4层以上，进程树层次结构是暂时的，时间短，而目录层次是永久性的。进程和文件在所有权及保护方面也有区别：只有父进程能控制和访问子进程，而在文件和目录中存在一种机制，使文件所有者之外的其他用户也可以进行访问。<br>目录结构中的每个文件都可以通过根目录（目录的顶部）来确定。在读写文件之前，首先要打开文件，检查其访问权限。若权限许可，系统将返回一个文件描述符（小整数），供后续操作使用。若禁止访问就会返回一个错误码。</p>\n<h3 id=\"四、保护\"><a href=\"#四、保护\" class=\"headerlink\" title=\"四、保护\"></a>四、保护</h3><p>管理系统的安全性完全依赖操作系统，文件的访问权限也是需要进行保护的。<br>在UNIX系统中，每个文件赋予一个9位的二进制保护码，该保护码有三个3位字段—rwx位，其中r代表可读，w代表可写，x代表可执行。三个字段分别用于所有者，所有者同组中的其他成员以及其他成员。<br>例如：rwxrw-r–代表了所有者可以读写执行文件，同组具有读写权限，而其他成员只具备读的权限。</p>\n<h3 id=\"五、shell\"><a href=\"#五、shell\" class=\"headerlink\" title=\"五、shell\"></a>五、shell</h3><p>操作系统是进行系统调用的代码，shell是UNIX中的命令解释器，它本身不是操作系统的组成部分，它是终端用户与操作系统之间的界面。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一、进程\"><a href=\"#一、进程\" class=\"headerlink\" title=\"一、进程\"></a>一、进程</h3><p>1、进程的本质：正在执行的一个程序。<br>2、进程的地址空间：从某个最小值的存储位置（通常是零）到某个最大值存储位置的列表。在这个地址空间中，进程可以进行读写。该地址空间中存放有可执行程序、程序的数据以及程序的堆栈。与每个进程相关的还有资源集，通常包含寄存器（含有程序计数器和堆栈指针）、打开文件的清单、突出的报警、有关进程清单，以及运行该程序所需要的所有其他信息。<br>3、进程基本上是容纳运行一个程序需要所有信息的容器。<br>在许多操作系统中，与一个进程有关的所有信息，处理该进程自身地址空间的内容以外，均存放在操作系统中的进程表中，进程表是数组（或链表）结构，当前存在的每个进程都要占用其中的一项。一个（挂起的）进程包括：进程的地址空间（磁芯映像），以及对应的进程表项，其中包括寄存器以及稍后重新启动该进程所需的其他信息。</p>\n<blockquote>\n<p>进程间通信：合作完成某些作业的相关进程进行彼此通信以便同步它们的行为。<br>进程系统调用：进程创建、进程终止、申请更多内存（或释放不再需要内存）、等待一个子进程结束、用另一个程序覆盖该程序等。</p>\n</blockquote>\n<p>系统管理器授权每个进程使用一个给定的UID标识符，每个被启动的进程都有一个启动该进程的用户UID。子进程拥有与父进程一样的UID，用户可以是某个组的成员，每个组也有一个GID标识。</p>\n<h3 id=\"二、地址空间\"><a href=\"#二、地址空间\" class=\"headerlink\" title=\"二、地址空间\"></a>二、地址空间</h3><p>通常每个进程有一些可以使用的地址集合，典型值从0开始直到某个最大值。在最简单情况下，一个进程可拥有的最大地址空间小于主存。</p>\n<blockquote>\n<p>在23位地址的计算机中，有2^32字节的地址空间；64位就有2^64字节的地址空间。</p>\n</blockquote>\n<p>虚拟内存：操作系统可以把部分地址空间装入主存，部分留在磁盘上，并且在需要时穿梭交换它们。该地址空间与机器的物理内存解耦，可能大于也可能小于该物理空间。</p>\n<h3 id=\"三、文件\"><a href=\"#三、文件\" class=\"headerlink\" title=\"三、文件\"></a>三、文件</h3><blockquote>\n<p>操作系统的一项主要功能就是隐藏磁盘和其他I/O设备的细节特性，并提供给程序员一个良好、清晰的独立于设备的抽象文件模型。</p>\n</blockquote>\n<p>进程和文件层次都可以组成树状结构，它们的不同之处在于：<br>一般进程的树状结构层次不深（低于三层），而文件树状结构的层次常多于4层以上，进程树层次结构是暂时的，时间短，而目录层次是永久性的。进程和文件在所有权及保护方面也有区别：只有父进程能控制和访问子进程，而在文件和目录中存在一种机制，使文件所有者之外的其他用户也可以进行访问。<br>目录结构中的每个文件都可以通过根目录（目录的顶部）来确定。在读写文件之前，首先要打开文件，检查其访问权限。若权限许可，系统将返回一个文件描述符（小整数），供后续操作使用。若禁止访问就会返回一个错误码。</p>\n<h3 id=\"四、保护\"><a href=\"#四、保护\" class=\"headerlink\" title=\"四、保护\"></a>四、保护</h3><p>管理系统的安全性完全依赖操作系统，文件的访问权限也是需要进行保护的。<br>在UNIX系统中，每个文件赋予一个9位的二进制保护码，该保护码有三个3位字段—rwx位，其中r代表可读，w代表可写，x代表可执行。三个字段分别用于所有者，所有者同组中的其他成员以及其他成员。<br>例如：rwxrw-r–代表了所有者可以读写执行文件，同组具有读写权限，而其他成员只具备读的权限。</p>\n<h3 id=\"五、shell\"><a href=\"#五、shell\" class=\"headerlink\" title=\"五、shell\"></a>五、shell</h3><p>操作系统是进行系统调用的代码，shell是UNIX中的命令解释器，它本身不是操作系统的组成部分，它是终端用户与操作系统之间的界面。</p>\n"},{"layout":"sysdefine","title":"现代操作系统-进程","date":"2020-04-07T10:07:58.000Z","_content":"\n>进程是操作系统最核心的的概念，它是对正在运行程序的一个抽象。\n### 1、进程模型\n在进程模型中，计算机上所有可运行的软件，包括操作系统，被组织成若干顺序进程，简称进程(process)。一个进程就是一个正在执行程序的实例，包括程序计数器、寄存器和变量的当前值。\n一个进程是某种类型的一个活动，它有程序、输入、输出以及状态。当个处理器可以被若干进程共享，它使用某种调度算法决定何时停止一个进程的工作，并转而为另一个进程提供服务。\n### 2、进程的创建\n操作系统需要有一种方式来创建进程，其中，进程的创建因素：\n1. 系统初始化。\n2. 正在运行的程序执行了创建进程的系统调用。\n3. 用户请求创建一个新进程。\n4. 一个批处理作业的初始化。\n\n>停留在后台处理之类活动的进程称为**守护进程**。\n\n在UNIX系统中，只有一个系统调用可以用来创建新进程：fork。这个系统调用会创建一个与调用进程相同的副本。\n在windows和UNIX系统中，进程创建之后，父进程和子进程有各自不同的地址空间。如果其中某个进程在其地址空间中修改一个字，这个修改对其他进程而言是不可见的。\n### 3、进程的终止\n进程在创建后，执行相应的工作后，会因为不同的方式终止，通常有以下因素：\n1. 正常退出（自愿的）。\n2. 出错退出（自愿的）。\n3. 严重错误（非自愿）。\n4. 被其他进程杀死（非自愿）。\n\n在UNIX中调用exit来表示已经完成工作结束进程，而Windows中，则调用的是ExitProcess。\n### 4、进程的层次结构\n>一个进程只有一个父进程，但是可以有零个、一个、两个或多个子进程。\n\n在UNIX中，进程和它所有子进程以及后裔共同组成一个进程组。而在windows系统系统中没有进程层次概念，所有的进程都是地位相同的。\n### 5、进程的状态以及实现\n#### 1. 状态\n尽管每个进程有一个独立的实体，有其自己的程序计数器和内部状态，但是进程之间经常需要相互作用，一个进程的输出结果可能作为另一个进程的输入。\n**进程的三种状态：** \n1. 运行态（该时刻进程实际占用CPU）。\n2. 就绪态（可运行，但因为其他进程正在运行而暂时停止）。\n3. 阻塞态（除非某种外部事件发生，否则进程不能进行）。\n运行和就绪状态在逻辑上类似，处于这两种状态的进程都可以运行，只是对于就绪态，暂时没有CPU分配给它。而阻塞态的进程不能运行，即使CPU空闲也不行。\n![进程的三种状态](https://img-blog.csdnimg.cn/20190701224135960.png)\n一个进程可处于运行态、阻塞态和就绪态，各状态之间的转换如下：\n1. 进程因为等待输入而被阻塞。\n2. 调度程序选择另一个进程。\n3. 调度程序选择这个进程。\n4. 出现有效输入。\n>基于进程的操作系统中最底层的是中断和调度处理，在该层之上是顺序进程。\n\n#### 2. 实现\n操作系系统维护**进程表**进行实现进程模型，每个进程占用一个进程表项。该表项包含了进程状态的重要信息（程序计数器、堆栈指针、内存分配状态、所打开文件的状态、账号和调度信息，以及其他在进程由运行到就绪态），保证该进程随后能再次启动，就像从未被中断过一样。\n与每一I/O类关联的是一个称作**中断向量**的位置，它包含中断服务程序的入口地址。所有的中断都是从保存寄存器开始的，对于当前进程而言，通常是保存在进程表项中。随后会从堆栈中删除由中断硬件机制存入堆栈的那部分信息，并将堆栈指针指向由一个由进程处理程序所使用的临时堆栈。\n一个进程在执行过程中可能被中断数千次，但关键是每次中断后，被中断的进程都返回到与中断发生前完全相同的状态。\n### 6、多道程序设计模型\n采用多道程序设计可以提高CPU利用率。严格地说，如果进程用于计算机的平均时间是进程在内存中停留时间的20%，且内存中同时有5个进程，则CPU将一直满负载运行。\n更好的模型是从概率的角度来看CPU的利用率。CPU利用率是内存中进程数目的函数：CPU利用率=1-P^n；p表示一个进程等待I/O操作的时间与其停留在内存中时间的比。当内存中同时有n个进程时，则所有n个进程都在等待I/O(此时CPU空转)的概率的p的n次方。\n![函数关系](https://img-blog.csdnimg.cn/20190701233327605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x4dzk4MzUyMA==,size_16,color_FFFFFF,t_70)\n以n为变量的函数表示了CPU的利用率，n称为多道程序设计的道数。","source":"_posts/process.md","raw":"---\nlayout: sysdefine\ntitle: 现代操作系统-进程     \ndate: 2020-04-07 18:07:58\ntags: \"进程\"\ncategories: \"操作系统\"\n---\n\n>进程是操作系统最核心的的概念，它是对正在运行程序的一个抽象。\n### 1、进程模型\n在进程模型中，计算机上所有可运行的软件，包括操作系统，被组织成若干顺序进程，简称进程(process)。一个进程就是一个正在执行程序的实例，包括程序计数器、寄存器和变量的当前值。\n一个进程是某种类型的一个活动，它有程序、输入、输出以及状态。当个处理器可以被若干进程共享，它使用某种调度算法决定何时停止一个进程的工作，并转而为另一个进程提供服务。\n### 2、进程的创建\n操作系统需要有一种方式来创建进程，其中，进程的创建因素：\n1. 系统初始化。\n2. 正在运行的程序执行了创建进程的系统调用。\n3. 用户请求创建一个新进程。\n4. 一个批处理作业的初始化。\n\n>停留在后台处理之类活动的进程称为**守护进程**。\n\n在UNIX系统中，只有一个系统调用可以用来创建新进程：fork。这个系统调用会创建一个与调用进程相同的副本。\n在windows和UNIX系统中，进程创建之后，父进程和子进程有各自不同的地址空间。如果其中某个进程在其地址空间中修改一个字，这个修改对其他进程而言是不可见的。\n### 3、进程的终止\n进程在创建后，执行相应的工作后，会因为不同的方式终止，通常有以下因素：\n1. 正常退出（自愿的）。\n2. 出错退出（自愿的）。\n3. 严重错误（非自愿）。\n4. 被其他进程杀死（非自愿）。\n\n在UNIX中调用exit来表示已经完成工作结束进程，而Windows中，则调用的是ExitProcess。\n### 4、进程的层次结构\n>一个进程只有一个父进程，但是可以有零个、一个、两个或多个子进程。\n\n在UNIX中，进程和它所有子进程以及后裔共同组成一个进程组。而在windows系统系统中没有进程层次概念，所有的进程都是地位相同的。\n### 5、进程的状态以及实现\n#### 1. 状态\n尽管每个进程有一个独立的实体，有其自己的程序计数器和内部状态，但是进程之间经常需要相互作用，一个进程的输出结果可能作为另一个进程的输入。\n**进程的三种状态：** \n1. 运行态（该时刻进程实际占用CPU）。\n2. 就绪态（可运行，但因为其他进程正在运行而暂时停止）。\n3. 阻塞态（除非某种外部事件发生，否则进程不能进行）。\n运行和就绪状态在逻辑上类似，处于这两种状态的进程都可以运行，只是对于就绪态，暂时没有CPU分配给它。而阻塞态的进程不能运行，即使CPU空闲也不行。\n![进程的三种状态](https://img-blog.csdnimg.cn/20190701224135960.png)\n一个进程可处于运行态、阻塞态和就绪态，各状态之间的转换如下：\n1. 进程因为等待输入而被阻塞。\n2. 调度程序选择另一个进程。\n3. 调度程序选择这个进程。\n4. 出现有效输入。\n>基于进程的操作系统中最底层的是中断和调度处理，在该层之上是顺序进程。\n\n#### 2. 实现\n操作系系统维护**进程表**进行实现进程模型，每个进程占用一个进程表项。该表项包含了进程状态的重要信息（程序计数器、堆栈指针、内存分配状态、所打开文件的状态、账号和调度信息，以及其他在进程由运行到就绪态），保证该进程随后能再次启动，就像从未被中断过一样。\n与每一I/O类关联的是一个称作**中断向量**的位置，它包含中断服务程序的入口地址。所有的中断都是从保存寄存器开始的，对于当前进程而言，通常是保存在进程表项中。随后会从堆栈中删除由中断硬件机制存入堆栈的那部分信息，并将堆栈指针指向由一个由进程处理程序所使用的临时堆栈。\n一个进程在执行过程中可能被中断数千次，但关键是每次中断后，被中断的进程都返回到与中断发生前完全相同的状态。\n### 6、多道程序设计模型\n采用多道程序设计可以提高CPU利用率。严格地说，如果进程用于计算机的平均时间是进程在内存中停留时间的20%，且内存中同时有5个进程，则CPU将一直满负载运行。\n更好的模型是从概率的角度来看CPU的利用率。CPU利用率是内存中进程数目的函数：CPU利用率=1-P^n；p表示一个进程等待I/O操作的时间与其停留在内存中时间的比。当内存中同时有n个进程时，则所有n个进程都在等待I/O(此时CPU空转)的概率的p的n次方。\n![函数关系](https://img-blog.csdnimg.cn/20190701233327605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x4dzk4MzUyMA==,size_16,color_FFFFFF,t_70)\n以n为变量的函数表示了CPU的利用率，n称为多道程序设计的道数。","slug":"process","published":1,"updated":"2020-04-07T10:10:44.698Z","_id":"ck8pqrf2p0000mwvdhe4o759o","comments":1,"photos":[],"link":"","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\thinkerlxw\\assets\\css\\APlayer.min.css\"><script src=\"\\thinkerlxw\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><blockquote>\n<p>进程是操作系统最核心的的概念，它是对正在运行程序的一个抽象。</p>\n</blockquote>\n<h3 id=\"1、进程模型\"><a href=\"#1、进程模型\" class=\"headerlink\" title=\"1、进程模型\"></a>1、进程模型</h3><p>在进程模型中，计算机上所有可运行的软件，包括操作系统，被组织成若干顺序进程，简称进程(process)。一个进程就是一个正在执行程序的实例，包括程序计数器、寄存器和变量的当前值。<br>一个进程是某种类型的一个活动，它有程序、输入、输出以及状态。当个处理器可以被若干进程共享，它使用某种调度算法决定何时停止一个进程的工作，并转而为另一个进程提供服务。</p>\n<h3 id=\"2、进程的创建\"><a href=\"#2、进程的创建\" class=\"headerlink\" title=\"2、进程的创建\"></a>2、进程的创建</h3><p>操作系统需要有一种方式来创建进程，其中，进程的创建因素：</p>\n<ol>\n<li>系统初始化。</li>\n<li>正在运行的程序执行了创建进程的系统调用。</li>\n<li>用户请求创建一个新进程。</li>\n<li>一个批处理作业的初始化。</li>\n</ol>\n<blockquote>\n<p>停留在后台处理之类活动的进程称为<strong>守护进程</strong>。</p>\n</blockquote>\n<p>在UNIX系统中，只有一个系统调用可以用来创建新进程：fork。这个系统调用会创建一个与调用进程相同的副本。<br>在windows和UNIX系统中，进程创建之后，父进程和子进程有各自不同的地址空间。如果其中某个进程在其地址空间中修改一个字，这个修改对其他进程而言是不可见的。</p>\n<h3 id=\"3、进程的终止\"><a href=\"#3、进程的终止\" class=\"headerlink\" title=\"3、进程的终止\"></a>3、进程的终止</h3><p>进程在创建后，执行相应的工作后，会因为不同的方式终止，通常有以下因素：</p>\n<ol>\n<li>正常退出（自愿的）。</li>\n<li>出错退出（自愿的）。</li>\n<li>严重错误（非自愿）。</li>\n<li>被其他进程杀死（非自愿）。</li>\n</ol>\n<p>在UNIX中调用exit来表示已经完成工作结束进程，而Windows中，则调用的是ExitProcess。</p>\n<h3 id=\"4、进程的层次结构\"><a href=\"#4、进程的层次结构\" class=\"headerlink\" title=\"4、进程的层次结构\"></a>4、进程的层次结构</h3><blockquote>\n<p>一个进程只有一个父进程，但是可以有零个、一个、两个或多个子进程。</p>\n</blockquote>\n<p>在UNIX中，进程和它所有子进程以及后裔共同组成一个进程组。而在windows系统系统中没有进程层次概念，所有的进程都是地位相同的。</p>\n<h3 id=\"5、进程的状态以及实现\"><a href=\"#5、进程的状态以及实现\" class=\"headerlink\" title=\"5、进程的状态以及实现\"></a>5、进程的状态以及实现</h3><h4 id=\"1-状态\"><a href=\"#1-状态\" class=\"headerlink\" title=\"1. 状态\"></a>1. 状态</h4><p>尽管每个进程有一个独立的实体，有其自己的程序计数器和内部状态，但是进程之间经常需要相互作用，一个进程的输出结果可能作为另一个进程的输入。<br><strong>进程的三种状态：</strong> </p>\n<ol>\n<li>运行态（该时刻进程实际占用CPU）。</li>\n<li>就绪态（可运行，但因为其他进程正在运行而暂时停止）。</li>\n<li>阻塞态（除非某种外部事件发生，否则进程不能进行）。<br>运行和就绪状态在逻辑上类似，处于这两种状态的进程都可以运行，只是对于就绪态，暂时没有CPU分配给它。而阻塞态的进程不能运行，即使CPU空闲也不行。<br><img src=\"https://img-blog.csdnimg.cn/20190701224135960.png\" alt=\"进程的三种状态\"><br>一个进程可处于运行态、阻塞态和就绪态，各状态之间的转换如下：</li>\n<li>进程因为等待输入而被阻塞。</li>\n<li>调度程序选择另一个进程。</li>\n<li>调度程序选择这个进程。</li>\n<li>出现有效输入。<blockquote>\n<p>基于进程的操作系统中最底层的是中断和调度处理，在该层之上是顺序进程。</p>\n</blockquote>\n</li>\n</ol>\n<h4 id=\"2-实现\"><a href=\"#2-实现\" class=\"headerlink\" title=\"2. 实现\"></a>2. 实现</h4><p>操作系系统维护<strong>进程表</strong>进行实现进程模型，每个进程占用一个进程表项。该表项包含了进程状态的重要信息（程序计数器、堆栈指针、内存分配状态、所打开文件的状态、账号和调度信息，以及其他在进程由运行到就绪态），保证该进程随后能再次启动，就像从未被中断过一样。<br>与每一I/O类关联的是一个称作<strong>中断向量</strong>的位置，它包含中断服务程序的入口地址。所有的中断都是从保存寄存器开始的，对于当前进程而言，通常是保存在进程表项中。随后会从堆栈中删除由中断硬件机制存入堆栈的那部分信息，并将堆栈指针指向由一个由进程处理程序所使用的临时堆栈。<br>一个进程在执行过程中可能被中断数千次，但关键是每次中断后，被中断的进程都返回到与中断发生前完全相同的状态。</p>\n<h3 id=\"6、多道程序设计模型\"><a href=\"#6、多道程序设计模型\" class=\"headerlink\" title=\"6、多道程序设计模型\"></a>6、多道程序设计模型</h3><p>采用多道程序设计可以提高CPU利用率。严格地说，如果进程用于计算机的平均时间是进程在内存中停留时间的20%，且内存中同时有5个进程，则CPU将一直满负载运行。<br>更好的模型是从概率的角度来看CPU的利用率。CPU利用率是内存中进程数目的函数：CPU利用率=1-P^n；p表示一个进程等待I/O操作的时间与其停留在内存中时间的比。当内存中同时有n个进程时，则所有n个进程都在等待I/O(此时CPU空转)的概率的p的n次方。<br><img src=\"https://img-blog.csdnimg.cn/20190701233327605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x4dzk4MzUyMA==,size_16,color_FFFFFF,t_70\" alt=\"函数关系\"><br>以n为变量的函数表示了CPU的利用率，n称为多道程序设计的道数。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>进程是操作系统最核心的的概念，它是对正在运行程序的一个抽象。</p>\n</blockquote>\n<h3 id=\"1、进程模型\"><a href=\"#1、进程模型\" class=\"headerlink\" title=\"1、进程模型\"></a>1、进程模型</h3><p>在进程模型中，计算机上所有可运行的软件，包括操作系统，被组织成若干顺序进程，简称进程(process)。一个进程就是一个正在执行程序的实例，包括程序计数器、寄存器和变量的当前值。<br>一个进程是某种类型的一个活动，它有程序、输入、输出以及状态。当个处理器可以被若干进程共享，它使用某种调度算法决定何时停止一个进程的工作，并转而为另一个进程提供服务。</p>\n<h3 id=\"2、进程的创建\"><a href=\"#2、进程的创建\" class=\"headerlink\" title=\"2、进程的创建\"></a>2、进程的创建</h3><p>操作系统需要有一种方式来创建进程，其中，进程的创建因素：</p>\n<ol>\n<li>系统初始化。</li>\n<li>正在运行的程序执行了创建进程的系统调用。</li>\n<li>用户请求创建一个新进程。</li>\n<li>一个批处理作业的初始化。</li>\n</ol>\n<blockquote>\n<p>停留在后台处理之类活动的进程称为<strong>守护进程</strong>。</p>\n</blockquote>\n<p>在UNIX系统中，只有一个系统调用可以用来创建新进程：fork。这个系统调用会创建一个与调用进程相同的副本。<br>在windows和UNIX系统中，进程创建之后，父进程和子进程有各自不同的地址空间。如果其中某个进程在其地址空间中修改一个字，这个修改对其他进程而言是不可见的。</p>\n<h3 id=\"3、进程的终止\"><a href=\"#3、进程的终止\" class=\"headerlink\" title=\"3、进程的终止\"></a>3、进程的终止</h3><p>进程在创建后，执行相应的工作后，会因为不同的方式终止，通常有以下因素：</p>\n<ol>\n<li>正常退出（自愿的）。</li>\n<li>出错退出（自愿的）。</li>\n<li>严重错误（非自愿）。</li>\n<li>被其他进程杀死（非自愿）。</li>\n</ol>\n<p>在UNIX中调用exit来表示已经完成工作结束进程，而Windows中，则调用的是ExitProcess。</p>\n<h3 id=\"4、进程的层次结构\"><a href=\"#4、进程的层次结构\" class=\"headerlink\" title=\"4、进程的层次结构\"></a>4、进程的层次结构</h3><blockquote>\n<p>一个进程只有一个父进程，但是可以有零个、一个、两个或多个子进程。</p>\n</blockquote>\n<p>在UNIX中，进程和它所有子进程以及后裔共同组成一个进程组。而在windows系统系统中没有进程层次概念，所有的进程都是地位相同的。</p>\n<h3 id=\"5、进程的状态以及实现\"><a href=\"#5、进程的状态以及实现\" class=\"headerlink\" title=\"5、进程的状态以及实现\"></a>5、进程的状态以及实现</h3><h4 id=\"1-状态\"><a href=\"#1-状态\" class=\"headerlink\" title=\"1. 状态\"></a>1. 状态</h4><p>尽管每个进程有一个独立的实体，有其自己的程序计数器和内部状态，但是进程之间经常需要相互作用，一个进程的输出结果可能作为另一个进程的输入。<br><strong>进程的三种状态：</strong> </p>\n<ol>\n<li>运行态（该时刻进程实际占用CPU）。</li>\n<li>就绪态（可运行，但因为其他进程正在运行而暂时停止）。</li>\n<li>阻塞态（除非某种外部事件发生，否则进程不能进行）。<br>运行和就绪状态在逻辑上类似，处于这两种状态的进程都可以运行，只是对于就绪态，暂时没有CPU分配给它。而阻塞态的进程不能运行，即使CPU空闲也不行。<br><img src=\"https://img-blog.csdnimg.cn/20190701224135960.png\" alt=\"进程的三种状态\"><br>一个进程可处于运行态、阻塞态和就绪态，各状态之间的转换如下：</li>\n<li>进程因为等待输入而被阻塞。</li>\n<li>调度程序选择另一个进程。</li>\n<li>调度程序选择这个进程。</li>\n<li>出现有效输入。<blockquote>\n<p>基于进程的操作系统中最底层的是中断和调度处理，在该层之上是顺序进程。</p>\n</blockquote>\n</li>\n</ol>\n<h4 id=\"2-实现\"><a href=\"#2-实现\" class=\"headerlink\" title=\"2. 实现\"></a>2. 实现</h4><p>操作系系统维护<strong>进程表</strong>进行实现进程模型，每个进程占用一个进程表项。该表项包含了进程状态的重要信息（程序计数器、堆栈指针、内存分配状态、所打开文件的状态、账号和调度信息，以及其他在进程由运行到就绪态），保证该进程随后能再次启动，就像从未被中断过一样。<br>与每一I/O类关联的是一个称作<strong>中断向量</strong>的位置，它包含中断服务程序的入口地址。所有的中断都是从保存寄存器开始的，对于当前进程而言，通常是保存在进程表项中。随后会从堆栈中删除由中断硬件机制存入堆栈的那部分信息，并将堆栈指针指向由一个由进程处理程序所使用的临时堆栈。<br>一个进程在执行过程中可能被中断数千次，但关键是每次中断后，被中断的进程都返回到与中断发生前完全相同的状态。</p>\n<h3 id=\"6、多道程序设计模型\"><a href=\"#6、多道程序设计模型\" class=\"headerlink\" title=\"6、多道程序设计模型\"></a>6、多道程序设计模型</h3><p>采用多道程序设计可以提高CPU利用率。严格地说，如果进程用于计算机的平均时间是进程在内存中停留时间的20%，且内存中同时有5个进程，则CPU将一直满负载运行。<br>更好的模型是从概率的角度来看CPU的利用率。CPU利用率是内存中进程数目的函数：CPU利用率=1-P^n；p表示一个进程等待I/O操作的时间与其停留在内存中时间的比。当内存中同时有n个进程时，则所有n个进程都在等待I/O(此时CPU空转)的概率的p的n次方。<br><img src=\"https://img-blog.csdnimg.cn/20190701233327605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x4dzk4MzUyMA==,size_16,color_FFFFFF,t_70\" alt=\"函数关系\"><br>以n为变量的函数表示了CPU的利用率，n称为多道程序设计的道数。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck8pprmfr0000skvdcc5j2pgx","category_id":"ck8pprmfx0001skvdfqf89es4","_id":"ck8pprmfz0004skvddz5dc74y"},{"post_id":"ck8pma9310000l4vd3d3q4igk","category_id":"ck8pqnf9o0000ksvde7vhaxg2","_id":"ck8pqnf9s0003ksvd947d5l8w"},{"post_id":"ck8pqrf2p0000mwvdhe4o759o","category_id":"ck8pprmfx0001skvdfqf89es4","_id":"ck8pqrf2w0002mwvd29ttgzr0"}],"PostTag":[{"post_id":"ck8pprmfr0000skvdcc5j2pgx","tag_id":"ck8pprmfy0002skvdhmnk9y2y","_id":"ck8pprmfz0003skvdgufm1unj"},{"post_id":"ck8pma9310000l4vd3d3q4igk","tag_id":"ck8pqnf9q0001ksvd9p3cf4qz","_id":"ck8pqnf9s0002ksvda227fqrb"},{"post_id":"ck8pqrf2p0000mwvdhe4o759o","tag_id":"ck8pqrf2v0001mwvdawwb03qg","_id":"ck8pqrf2x0003mwvdauhbcye1"}],"Tag":[{"name":"测试","_id":"ck8pnn8r20000egvd38sj2zd1"},{"name":"操作系统","_id":"ck8pprmfy0002skvdhmnk9y2y"},{"name":"hexo","_id":"ck8pqnf9q0001ksvd9p3cf4qz"},{"name":"进程","_id":"ck8pqrf2v0001mwvdawwb03qg"}]}}